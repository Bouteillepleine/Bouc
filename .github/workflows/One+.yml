name: Build and Release Kernel
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP13r-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Free Disk Space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash
          
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache \
            cmake \
            libdw-dev \
            zlib1g-dev

      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          
      - name: Setup Python and Repo Tool
        run: |
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          mkdir -p ~/.bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Configure Build Directory
        run: |
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}"
          cd "builds/${ROOT_DIR}"

      - name: Clone Required Repositories
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/WildPlusKernel/kernel_patches.git

      - name: Setup Kernel Source
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          mkdir -p kernel_platform/oneplus13r_v
          cd kernel_platform/oneplus13r_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus_13r.xml --depth=1
          repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Setup KernelSU
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          git fetch --unshallow
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          git submodule update --init --recursive
          cd KernelSU-Next/kernel
          KSU_VERSION=$(expr $(git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" Makefile

      - name: Setup SUSFS
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          set -euxo pipefail
          SUSFS_PATCHES="../../../susfs4ksu/kernel_patches"
          KERNEL_PATCHES="../../../kernel_patches"
          KSU_NEXT="KernelSU-Next"
          
          mkdir -p ./common/fs ./common/include/linux
          cp "${SUSFS_PATCHES}/fs/"* ./common/fs/
          cp "${SUSFS_PATCHES}/include/linux/"* ./common/include/linux/
          cp "${SUSFS_PATCHES}/50_add_susfs_in_gki-android14-6.1.patch" ./common/
          cp "${KERNEL_PATCHES}/69_hide_stuff.patch" ./common/
          cp "${KERNEL_PATCHES}/next/next_hooks.patch" ./common/
          cp "${KERNEL_PATCHES}/next/syscall_hooks.patch" ./common/

          cd common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch
          patch -p1 < next_hooks.patch
          patch -p1 < syscall_hooks.patch
          patch -p1 < 69_hide_stuff.patch
          git add -A
          git commit -m "BUILD: Apply SUSFS and kernel patches" || true

      - name: Configure Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          CONFIG_FILE="./common/arch/arm64/configs/gki_defconfig"
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU
          ./common/scripts/config --file "$CONFIG_FILE" --disable KSU_WITH_KPROBES
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_HAS_MAGIC_MOUNT
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_SUS_PATH
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_SUS_MOUNT
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_SUS_KSTAT
          ./common/scripts/config --file "$CONFIG_FILE" --disable KSU_SUSFS_SUS_OVERLAYFS
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_TRY_UMOUNT
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_SPOOF_UNAME
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_ENABLE_LOG
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG
          ./common/scripts/config --file "$CONFIG_FILE" --enable KSU_SUSFS_OPEN_REDIRECT
          ./common/scripts/config --file "$CONFIG_FILE" --disable KSU_SUSFS_SUS_SU
          # Add additional tmpfs config setting
          ./common/scripts/config --file "$CONFIG_FILE" --enable TMPFS_XATTR
          ./common/scripts/config --file "$CONFIG_FILE" --enable TMPFS_POSIX_ACL
          # Add additional IP config setting
          ./common/scripts/config --file "$CONFIG_FILE" --enable IP_NF_TARGET_TTL
          ./common/scripts/config --file "$CONFIG_FILE" --enable IP6_NF_TARGET_HL
          ./common/scripts/config --file "$CONFIG_FILE" --enable IP6_NF_MATCH_HL
          # Add additional Scheduler config setting
          ./common/scripts/config --file "$CONFIG_FILE" --enable SCHED_CLASS_EXT
          ./common/scripts/config --file "$CONFIG_FILE" --enable SMP
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      - name: Run Build Preparation
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          echo "Running sed commands..."
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_THIN=y/CONFIG_LTO_CLANG_FULL=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_FULL=y/' "./common/arch/arm64/configs/gki_defconfig"
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./common/build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res"|' ./common/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res"|' ./msm-kernel/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res"|' ./external/dtc/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -i 's/-dirty//' ./common/scripts/setlocalversion
          sed -i 's/-dirty//' ./msm-kernel/scripts/setlocalversion
          sed -i 's/-dirty//' ./external/dtc/scripts/setlocalversion
          sed -i 's/-dirty//' ./build/kernel/kleaf/workspace_status_stamp.py || echo "No workspace_status_stamp.py!"
      - name: Build Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus13r_v/
        run: |
          cd kernel_platform
          mkdir -p out
          export PATH="/usr/lib/ccache:$PATH"
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc --all) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --ignore_missing_projects \
            -o "$(pwd)/out"

      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          cp kernel_platform/oneplus13r_v/kernel_platform/out/dist/Image AnyKernel3/Image
          cd AnyKernel3
          ZIP_NAME="OP13r-KSU-${KSUVER}.zip"
          zip -r "../$ZIP_NAME" ./*
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Download SUSFS Module
        working-directory: builds/${{ env.ROOT_DIR }}/AnyKernel3
        run: |
          wget https://github.com/sidex15/ksu_module_susfs/releases/latest/download/ksu_module_susfs_1.5.2+.zip -O ksu_module_susfs.zip

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ env.ROOT_DIR }}
          path: |
            builds/${{ env.ROOT_DIR }}/*.zip
            builds/${{ env.ROOT_DIR }}/AnyKernel3/ksu_module_susfs.zip
