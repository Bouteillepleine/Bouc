name: LTOon
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP13r-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  KERNEL_PLATFORM_PATH: "kernel_platform/oneplus13r_v/kernel_platform" # Define a constant for the kernel platform path
jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Free Disk Space
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash
      - name: Setup Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip curl git zip unzip gcc g++ make ninja-build file \
            bc bison flex libssl-dev libelf-dev wget build-essential \
            python3-dev python3-setuptools rsync ccache cmake libdw-dev zlib1g-dev
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
      - name: Setup Python and Repo Tool
        run: |
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          mkdir -p ~/.bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "$HOME/.bin" >> <span class="math-inline">GITHUB\_PATH
git config \-\-global user\.name "GitHub Actions Bot"
git config \-\-global user\.email "actions@github\.com"
\- name\: Configure Build Directory
run\: \|
set \-euxo pipefail
ROOT\_DIR\="</span>{ROOT_DIR_PREFIX}-<span class="math-inline">\(date \+'%Y\-%m\-%d\-%H\-%M'\)\-release" \# Use HH for 24\-hour format for better sorting
echo "ROOT\_DIR\=</span>{ROOT_DIR}" >> <span class="math-inline">GITHUB\_ENV
BUILD\_WORKSPACE\=</span>(pwd)/builds/<span class="math-inline">\{ROOT\_DIR\}
echo "BUILD\_WORKSPACE\=</span>{BUILD_WORKSPACE}" >> <span class="math-inline">GITHUB\_ENV \# Define the full build workspace path
mkdir \-p "</span>{BUILD_WORKSPACE}"
          cd "<span class="math-inline">\{BUILD\_WORKSPACE\}"
\- name\: Clone Required Repositories
run\: \|
repos\=\(
"https\://github\.com/Kernel\-SU/AnyKernel3 \-\-depth\=1"
"https\://gitlab\.com/simonpunk/susfs4ksu\.git \-b gki\-android14\-6\.1 \-\-depth\=1"
"https\://github\.com/WildPlusKernel/kernel\_patches\.git \-\-depth\=1"
\)
for repo in "</span>{repos[@]}"; do
            git clone $repo || { echo "Failed to clone $repo"; exit 1; }
          done
      - name: Setup Kernel Source
        working-directory: <span class="math-inline">\{\{ env\.BUILD\_WORKSPACE \}\}
run\: \|
mkdir \-p kernel\_platform/oneplus13r\_v
cd kernel\_platform/oneplus13r\_v
repo init \-u https\://github\.com/OnePlusOSS/kernel\_manifest\.git \-b oneplus/sm8650 \-m oneplus\_13r\.xml \-\-depth\=1 \|\| \{ echo "Failed to initialize repo"; exit 1; \}
repo sync \-c \-j</span>(nproc --all) --force-sync --no-clone-bundle --no-tags || { echo "Failed to sync repo"; exit 1; }
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

          # Extract the common kernel revision for OnePlus sm8650 devices
          MANIFEST_FILE="./kernel_platform/oneplus13r_v/.repo/manifest.xml"
          if [ -f "<span class="math-inline">MANIFEST\_FILE" \]; then
KERNEL\_SM8650\_REVISION\=</span>(grep "revision=\"oneplus/sm8650_v_15.0.0_oneplus12\"" "$MANIFEST_FILE" | grep -oP 'revision="\K[^"]+')
            if [ -n "$KERNEL_SM8650_REVISION" ]; then
              echo "KERNEL_SM8650_REVISION=$KERNEL_SM8650_REVISION" >> $GITHUB_ENV
            else
              echo "KERNEL_SM8650_REVISION=revision_not_found" >> $GITHUB_ENV
            fi
          else
            echo "KERNEL_SM8650_REVISION=manifest_not_found" >> $GITHUB_ENV
          fi
      - name: Setup KernelSU
        working-directory: <span class="math-inline">\{\{ env\.BUILD\_WORKSPACE \}\}/</span>{{ env.KERNEL_PLATFORM_PATH }}
        run: |
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          git submodule update --init --recursive
          cd KernelSU-Next/kernel
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> <span class="math-inline">GITHUB\_ENV
sed \-i "s/DKSU\_VERSION\=11998/DKSU\_VERSION\=</span>{KSU_VERSION}/" Makefile
      - name: Setup SUSFS
        working-directory: <span class="math-inline">\{\{ env\.BUILD\_WORKSPACE \}\}/</span>{{ env.KERNEL_PLATFORM_PATH }}
        run: |
          set -euxo pipefail
          # Clone repositories only if they don't exist
          if [ ! -d "susfs4ksu" ]; then
            git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1 --depth=1
          fi
          if [ ! -d "kernel_patches" ]; then
            git clone https://github.com/WildPlusKernel/kernel_patches.git --depth=1
          fi
          # Define patch and file paths for better readability
          SUSFS_PATCH_GKI="susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch"
          SUSFS_PATCH_KSU="kernel_patches/next/0001-kernel-patch-susfs-v1.5.5-to-KernelSU-Next-v1.0.5.patch"
          SYSCALL_HOOKS_PATCH="kernel_patches/next/syscall_hooks.patch"
