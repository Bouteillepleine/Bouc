name: Build and Release Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP13r-A15"
  BRANCH: "android14-6.1"
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CCACHE_DIR: ${{ github.workspace }}/.ccache

jobs:
  build-release:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Free Disk Space
        run: |
          sudo apt-get clean
          sudo rm -rf /usr/local/lib/android /opt/ghc /usr/local/share/boost
      - name: Setup Build Environment
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            bc bison build-essential ccache cmake curl flex \
            git libdw-dev libelf-dev libssl-dev lld llvm \
            ninja-build python3-dev python3-pip rsync unzip \
            wget zip zlib1g-dev
      - name: Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 2G
          
      - name: Setup Python Environment
        run: |
          python3 -m pip install --upgrade pip wheel
          pip3 install --user gitpython xmltodict
      - name: Configure Repo Tool
        run: |
          mkdir -p ~/.bin
          curl -sL https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+rx ~/.bin/repo
          echo "$HOME/.bin" >> $GITHUB_PATH
      - name: Initialize Build Directory
        id: build-dir
        run: |
          build_dir="${ROOT_DIR_PREFIX}-$(date +'%Y%m%d')-${GITHUB_SHA:0:7}"
          echo "ROOT_DIR=${build_dir}" >> $GITHUB_ENV
          mkdir -p "builds/${build_dir}"
          echo "::set-output name=path::builds/${build_dir}"
      - name: Clone Dependencies
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          git clone --depth=1 https://github.com/Kernel-SU/AnyKernel3
          git clone -b gki-android14-6.1 --single-branch https://gitlab.com/simonpunk/susfs4ksu.git
          git clone --filter=blob:none https://github.com/WildPlusKernel/kernel_patches.git
      - name: Initialize Kernel Source
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          mkdir -p kernel_platform/oneplus13r_v
          cd kernel_platform/oneplus13r_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git \
            -b oneplus/sm8650 \
            -m oneplus_13r.xml \
            --depth=1
          repo sync -c -j$(nproc) --force-sync --no-clone-bundle --no-tags
      - name: Integrate KernelSU
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          curl -fsSL "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          git submodule update --init --recursive
          cd KernelSU-Next/kernel
          KSU_VERSION=$(expr $(/usr/bin/git rev-list --count HEAD) "+" 10200)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=11998/DKSU_VERSION=${KSU_VERSION}/" Makefile
      - name: Apply SUSFS Patches
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          set -euxo pipefail
          SUSFS_PATCHES="../../../susfs4ksu/kernel_patches"
          KERNEL_PATCHES="../../../kernel_patches"
          KSU_NEXT="KernelSU-Next"
          mkdir -p ./common/fs ./common/include/linux
          cp "${SUSFS_PATCHES}/fs/"* ./common/fs/
          cp "${SUSFS_PATCHES}/include/linux/"* ./common/include/linux/
          cp "${SUSFS_PATCHES}/50_add_susfs_in_gki-android14-6.1.patch" ./common/
          cp "${KERNEL_PATCHES}/69_hide_stuff.patch" ./common/
          cp "${KERNEL_PATCHES}/next/next_hooks.patch" ./common/
          cp "${KERNEL_PATCHES}/next/syscall_hooks.patch" ./common/
          cd "${KSU_NEXT}"
          cd ../common
          patch -p1 -F 3 < syscall_hooks.patch
          patch -p1 --forward < next_hooks.patch || echo "Warning: KernelSU SUSFS patch may have been already applied or failed."
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || echo "Warning: SUSFS patch may have been already applied."
          patch -p1 -F 3 < 69_hide_stuff.patch || echo "Warning: 69_hide_stuff patch may have been already applied."
          git diff --quiet --exit-code || (git add -A && git commit -m "BUILD Kernel (SUSFS setup)" || true)
          cd ..
          git diff --quiet --exit-code || (git add -A && git commit -m "BUILD Kernel (SUSFS setup)" || true)
          git rm --cached KernelSU-Next || true
      - name: Configure Kernel Options
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          set -e
          CONFIGS=(
            "CONFIG_KSU=y"
            "CONFIG_KSU_WITH_KPROBES=n"
            "CONFIG_KSU_SUSFS=y"
            "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y"
            "CONFIG_KSU_SUSFS_SUS_PATH=y"
            "CONFIG_KSU_SUSFS_SUS_MOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y"
            "CONFIG_KSU_SUSFS_SUS_KSTAT=y"
            "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n"
            "CONFIG_KSU_SUSFS_TRY_UMOUNT=y"
            "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y"
            "CONFIG_KSU_SUSFS_SPOOF_UNAME=y"
            "CONFIG_KSU_SUSFS_ENABLE_LOG=y"
            "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y"
            "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y"
            "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y"
            "CONFIG_KSU_SUSFS_SUS_SU=n"
            "CONFIG_TMPFS_XATTR=y"
            "CONFIG_TMPFS_POSIX_ACL=y"
            "CONFIG_IP_NF_TARGET_TTL=y"
            "CONFIG_IP6_NF_TARGET_HL=y"
            "CONFIG_IP6_NF_MATCH_HL=y"
            "CONFIG_SCHED_CLASS_EXT=y"
            "CONFIG_SMP=y"
          )
          for CONFIG in "${CONFIGS[@]}"; do
            echo "$CONFIG" >> ./common/arch/arm64/configs/gki_defconfig
          done
          sed -i '2s/check_defconfig//' ./common/build.config.gki
      - name: Clean Kernel Version Strings
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v/kernel_platform
        run: |
          echo "Running sed commands..."
          sed -i 's/CONFIG_LTO=n/CONFIG_LTO=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_THIN=y/CONFIG_LTO_CLANG_FULL=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/CONFIG_LTO_CLANG_NONE=y/CONFIG_LTO_CLANG_FULL=y/' "./common/arch/arm64/configs/gki_defconfig"
          sed -i 's/check_defconfig//' ./common/build.config.gki
          sed -i '$s|echo "\$res"|echo "\$res"|' ./common/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res"|' ./msm-kernel/scripts/setlocalversion
          sed -i '$s|echo "\$res"|echo "\$res"|' ./external/dtc/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -i 's/-dirty//' ./common/scripts/setlocalversion
          sed -i 's/-dirty//' ./msm-kernel/scripts/setlocalversion
          sed -i 's/-dirty//' ./external/dtc/scripts/setlocalversion
          sed -i 's/-dirty//' ./build/kernel/kleaf/workspace_status_stamp.py || echo "No workspace_status_stamp.py!"
      - name: Build Kernel
        working-directory: ${{ steps.build-dir.outputs.path }}/kernel_platform/oneplus13r_v
        run: |
          export KBUILD_BUILD_USER="GitHubActions"
          export KBUILD_BUILD_HOST="gh-runner"
          
          cd kernel_platform
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs=$(nproc) \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom

      - name: Verify Kernel Image Exists
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          echo "Build artifacts:"
          ls -lR kernel_platform/oneplus13r_v/out/dist/
          [ -f kernel_platform/oneplus13r_v/out/dist/Image ] || { echo "❌ Image file not found!"; exit 1; }

      - name: Package Kernel Image
        working-directory: ${{ steps.build-dir.outputs.path }}
        run: |
          cp kernel_platform/oneplus13r_v/out/dist/Image AnyKernel3/
          
          cd AnyKernel3
          zip_name="AK3-OP13r-$(date +'%Y%m%d').zip"
          zip -r9 "../${zip_name}" .
          echo "ZIP_PATH=${zip_name}" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ env.ROOT_DIR }}
          path: ${{ steps.build-dir.outputs.path }}/${{ env.ZIP_PATH }}
